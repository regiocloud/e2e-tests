---
- name: Pre play
  hosts: all

  vars:
    # renovate: datasource=github-releases depName=cilium/cilium-cli
    cilium_version: '0.16.24'
    # renovate: datasource=github-releases depName=gardener/gardenctl-v2
    gardenctl_version: '2.9.0'
    # renovate: datasource=github-releases depName=gardener/gardenlogin
    gardenlogin_version: '0.6.0'
    # renovate: datasource=github-releases depName=kubernetes/kubernetes
    kubectl_version: '1.31.2'
    # renovate: datasource=github-releases depName=vmware-tanzu/sonobuoy
    sonobuoy_version: '0.57.2'

    gardenctl_binary: gardenctl
    kubectl_binary: kubectl
    sonobuoy_binary: sonobuoy

    inner_cloud_profile: "{{ cloud_profile | default('regio-a') }}"
    inner_gardenlinux_version: "{{ gardenlinux_version | default('1592.3.0') }}"
    inner_kubernetes_version: "{{ kubernetes_version | default('1.27.10') }}"
    inner_name: "{{ zuul.build[:8] }}"
    inner_networking_type: "{{ networking_type | default('cilium') }}"
    inner_project_name: "{{ project_name | default('cruv4yqhsc') }}"

  tasks:
    - name: Install required packages
      become: true
      ansible.builtin.apt:
        name:
          - jq
        update_cache: true
        state: present

    - name: Copy kubeconfig.yaml file
      ansible.builtin.copy:
        content: "{{ secret.KUBECONFIG }}"
        dest: "{{ zuul.project.src_dir }}/kubeconfig.yaml"
        remote_src: true
        mode: '0600'
        owner: zuul
        group: zuul

    - name: Run install script
      ansible.builtin.shell:
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir | default('.') }}"
        cmd: |
          set -e
          set -o pipefail
          set -x

          ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)

          # install sonobuoy
          wget -q https://github.com/vmware-tanzu/sonobuoy/releases/download/v{{ sonobuoy_version }}/sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz
          tar xvzf sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz sonobuoy
          rm sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz
          chmod +x sonobuoy
          sudo mv sonobuoy /usr/local/bin/sonobuoy

          # install gardenlogin
          wget -q https://github.com/gardener/gardenlogin/releases/download/v{{ gardenlogin_version }}/gardenlogin_linux_amd64
          mv gardenlogin_linux_amd64 gardenlogin
          chmod +x gardenlogin
          sudo mv gardenlogin /usr/local/bin/gardenlogin
          sudo cp /usr/local/bin/gardenlogin /usr/local/bin/kubectl-gardenlogin

          # install gardenctl
          wget -q https://github.com/gardener/gardenctl-v2/releases/download/v{{ gardenctl_version }}/gardenctl_v2_linux_amd64
          mv gardenctl_v2_linux_amd64 gardenctl
          chmod +x gardenctl
          sudo mv gardenctl /usr/local/bin/gardenctl

          # install kubectl
          curl -s -L -O https://dl.k8s.io/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

          {% if inner_networking_type == 'cilium' %}
          # install cilium
          curl -s -L --fail --remote-name-all "https://github.com/cilium/cilium-cli/releases/download/v{{ cilium_version }}/cilium-linux-${ARCH}.tar.gz{,.sha256sum}"
          sha256sum --check "cilium-linux-${ARCH}.tar.gz.sha256sum"
          sudo tar xzvfC "cilium-linux-${ARCH}.tar.gz" /usr/local/bin
          rm cilium-linux-"${ARCH}".tar.gz{,.sha256sum}
          {% endif %}

          # prepare e2e garden
          [ -n "$GCTL_SESSION_ID" ] || [ -n "$TERM_SESSION_ID" ] || export GCTL_SESSION_ID=$(uuidgen)
          {{ gardenctl_binary }} config set-garden e2e --kubeconfig kubeconfig.yaml

      changed_when: false

    - name: Prepare deployment.yaml
      ansible.builtin.template:
        src: "{{ inner_cloud_profile }}/deployment.yaml.j2"
        dest: "{{ zuul.project.src_dir }}/deployment.yaml"
        mode: 0644
        owner: zuul
        group: zuul

    - name: Run create script
      ansible.builtin.shell:
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir | default('.') }}"
        cmd: |
          set -e
          set -o pipefail
          set -x

          export KUBECONFIG=kubeconfig.yaml

          {{ kubectl_binary }} apply -f deployment.yaml

          while [[ $({{ kubectl_binary }} get shoots {{ inner_name }} -o json | jq -r '.metadata.labels["shoot.gardener.cloud/status"]') != "healthy" ]]; do
              echo "$(date) - waiting for shoot - phase 1"
              sleep 10
          done

          sleep 10

          while [[ $({{ kubectl_binary }} get shoots {{ inner_name }} -o json | jq -r '.status.conditions | .[].status' | xargs -I {} bash -c "if [[ '{}' != True ]]; then echo False; fi")  =~ False ]]; do
              echo "$(date) - waiting for shoot - phase 2"
              sleep 10
          done

          {{ kubectl_binary }} get shoots

          [ -n "$GCTL_SESSION_ID" ] || [ -n "$TERM_SESSION_ID" ] || export GCTL_SESSION_ID=$(uuidgen)
          {{ gardenctl_binary }} target --garden e2e --project {{ inner_project_name }} --shoot {{ inner_name }}
          eval $({{ gardenctl_binary }} kubectl-env bash)
          {{ kubectl_binary }} get nodes

      changed_when: false
