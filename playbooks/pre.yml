---
- name: Pre play
  hosts: all

  vars:
    gardenctl_version: "2.6.1"
    gardenlogin_version: "0.4.0"
    kubectl_version: "1.29.1"
    sonobuoy_version: "0.57.1"

    gardenctl_binary: gardenctl
    kubectl_binary: kubectl
    sonobuoy_binary: sonobuoy

    inner_cloud_profile: "{{ cloud_profile | default('regio-a') }}"
    inner_kubernetes_version: "{{ kubernetes_version | default('1.27.10') }}"
    inner_project_name: "{{ project_name | default('cruv4yqhsc') }}"

  tasks:
    - name: Install required packages
      become: true
      ansible.builtin.apt:
        name:
          - jq
        update_cache: true
        state: present

    - name: Copy kubeconfig.yaml configuration file
      ansible.builtin.copy:
        content: "{{ secret.KUBECONFIG }}"
        dest: "{{ zuul.project.src_dir }}/gardener/kubeconfig.yaml"
        remote_src: true
        mode: '0600'
        owner: zuul
        group: zuul

    - name: Run install script
      ansible.builtin.shell:
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir | default('.') }}/gardener"
        cmd: |
          set -e
          set -o pipefail
          set -x

          # install sonobuoy
          wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v{{ sonobuoy_version }}/sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz
          tar xvzf sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz sonobuoy
          rm sonobuoy_{{ sonobuoy_version }}_linux_amd64.tar.gz
          chmod +x sonobuoy
          sudo mv sonobuoy /usr/local/bin/sonobuoy

          # install gardenlogin
          wget https://github.com/gardener/gardenlogin/releases/download/v{{ gardenlogin_version }}/gardenlogin_linux_amd64
          mv gardenlogin_linux_amd64 gardenlogin
          chmod +x gardenlogin
          sudo mv gardenlogin /usr/local/bin/gardenlogin
          sudo cp /usr/local/bin/gardenlogin /usr/local/bin/kubectl-gardenlogin

          # install gardenctl
          wget https://github.com/gardener/gardenctl-v2/releases/download/v{{ gardenctl_version }}/gardenctl_v2_linux_amd64
          mv gardenctl_v2_linux_amd64 gardenctl
          chmod +x gardenctl
          sudo mv gardenctl /usr/local/bin/gardenctl

          # install kubectl
          curl -LO https://dl.k8s.io/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

          # prepare e2e garden
          [ -n "$GCTL_SESSION_ID" ] || [ -n "$TERM_SESSION_ID" ] || export GCTL_SESSION_ID=$(uuidgen)
          {{ gardenctl_binary }} config set-garden e2e --kubeconfig kubeconfig.yaml

      changed_when: false

    - name: Prepare deployment.yaml
      ansible.builtin.template:
        # use absolute path here
        src: "{{ ansible_user_dir }}src/github.com/regiocloud/e2e-tests/gardener/{{ inner_cloud_profile }}/deployment.yaml.j2"
        dest: "{{ zuul.project.src_dir }}/gardener/deployment.yaml"
        mode: 0644
        owner: zuul
        group: zuul

    - name: Run create script
      ansible.builtin.shell:
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir | default('.') }}/gardener"
        cmd: |
          set -e
          set -o pipefail
          set -x

          export KUBECONFIG=kubeconfig.yaml

          {{ kubectl_binary }} apply -f deployment.yaml

          while [[ $({{ kubectl_binary }} get shoots {{ inner_cloud_profile }} -o json | jq -r '.metadata.labels["shoot.gardener.cloud/status"]') != "healthy" ]]; do
              echo "$(date) - waiting for shoot - phase 1"
              sleep 10
          done

          sleep 10

          while [[ $({{ kubectl_binary }} get shoots {{ inner_cloud_profile }} -o json | jq -r '.status.conditions | .[].status' | xargs -I {} bash -c "if [[ '{}' != True ]]; then echo False; fi")  =~ False ]]; do
              echo "$(date) - waiting for shoot - phase 2"
              sleep 10
          done

          {{ kubectl_binary }} get shoots

          [ -n "$GCTL_SESSION_ID" ] || [ -n "$TERM_SESSION_ID" ] || export GCTL_SESSION_ID=$(uuidgen)
          {{ gardenctl_binary }} target --garden e2e --project {{ inner_project_name }} --shoot {{ inner_cloud_profile }}
          eval $({{ gardenctl_binary }} kubectl-env bash)
          {{ kubectl_binary }} get nodes

      changed_when: false
